#!/usr/bin/env ruby

# Copyright (c) 2014-2025 Yegor Bugayenko
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the 'Software'), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

$stdout.sync = true

require 'hoc'
require 'slop'
require 'hoc/version'

args = []
args.concat(File.read('.hoc').split(/\s+/).map(&:strip)) if File.exist?('.hoc')
args.concat(ARGV)

opts = Slop.parse(args, strict: true, help: true) do |o|
  o.banner = "Usage (#{HOC::VERSION}): hoc [options]"
  o.bool '-h', '--help', 'Show brief intro'
  o.string(
    '-f',
    '--format',
    'Output format (text|xml|json|int)',
    default: 'int'
  )
  o.array(
    '-e',
    '--exclude',
    'Glob pattern to exclude files/dirs, e.g. "vendor/**"'
  )
  o.string(
    '-a',
    '--author',
    'Filter results by given author',
    default: ''
  )
  o.string(
    '-d',
    '--dir',
    'Directory to scan',
    default: '.'
  )
  o.string(
    '-s',
    '--since',
    'Set the start date of hoc (YYYY-MM-DD)',
    default: '2000-01-01'
  )
  o.string(
    '-b',
    '--before',
    'Set the end date of hoc (YYYY-MM-DD)',
    default: Time.now.strftime('%Y-%m-%d')
  )
end

if opts.help?
  puts opts
  exit
end

Encoding.default_external = Encoding::UTF_8
Encoding.default_internal = Encoding::UTF_8

puts HOC::Base.new(opts).report
